#!/usr/bin/env python 
__author__ = "Patrik Lundin" 
__copyright__ = "Copyright 2018, nothisispatrik.com" 
__license__ = "LGPL v3. Algorithms/constants may be (C) 2014-2018 The Monero project or (C) 2012-2014 The Cryptonote Developers. All code is original."
__email__ = "patrik@nothisispatrik.com"
__status__ = "Prototype"
__doc__ = """Blake-256 hash. Single function "bl256"."""

def bl256(data):
    """Blake 256 hash

    Takes 200 bytes (as a list of bytes), produces 32 bytes.

    Ex: 
    print bl256([0]*200)
    # [104, 121, 166, 237, 116, 182, 30, 155, 241, 59, 211, 18, 75, 43, 202, 8, 179, 59, 114, 38, 243, 188, 179, 40, 136, 139, 163, 212, 97, 58, 244, 58]

    """
    K=[0x243F6A88,0x85A308D3,0x13198A2E,0x03707344,0xA4093822,0x299F31D0,0x082EFA98,0xEC4E6C89,0x452821E6,0x38D01377,0xBE5466CF,0x34E90C6C,0xC0AC29B7,0xC97C50DD,0x3F84D5B5,0xB5470917]
    h=[0x6A09E667,0xBB67AE85,0x3C6EF372,0xA54FF53A,0x510E527F,0x9B05688C,0x1F83D9AB,0x5BE0CD19]
    S=[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],[14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3],[11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4],[7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8],[9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13],[2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9],[12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11],[13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10],[6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5],[10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0],[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],[14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3],[11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4],[7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8],[9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13],[2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9],[12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11],[13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10],[6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5],[10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]]

    data = data+[0x80] + [0x00]*46 + [0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x40]

    for (o,t) in [(0,512), (64,1024), (128,1536), (192,1600)]:
        m = [ ((data[o+i+0]<<24))|
               ((data[o+i+1]<<16))|
               ((data[o+i+2]<<8))|
               ((data[o+i+3]<<0)) for i in range(0,64,4)]
        v = [0]*16
        v[ 0: 8] = [h[i] for i in range(8)]
        v[ 8:16] = [K[i] for i in range(8)]
        v[ 8:12] = [v[8+i] for i in range(4)]
        v[12] = v[12] ^ t
        v[13] = v[13] ^ t

        ror = lambda x,n: (x >> n) | ((x << (32-n)) & 0xFFFFFFFF)
        for round in range(14):
            i = 0
            for (a, b, c, d) in [
                ( 0, 4, 8,12), ( 1, 5, 9,13), ( 2, 6,10,14),
                ( 3, 7,11,15), ( 0, 5,10,15), ( 1, 6,11,12),
                ( 2, 7, 8,13), ( 3, 4, 9,14) ]:
                p,q  = S[round][i], S[round][i+1]
                i += 2
                    
                v[a] = ((v[a] + v[b]) + (m[p] ^ K[q]) ) & 0xFFFFFFFF
                v[d] = ror( v[d] ^ v[a], 16)
                v[c] = (v[c] + v[d]) & 0xFFFFFFFF
                v[b] = ror( v[b] ^ v[c], 12)
                
                v[a] = ((v[a] + v[b]) + (m[q] ^ K[p]) ) & 0xFFFFFFFF
                v[d] = ror( v[d] ^ v[a], 8)
                v[c] = (v[c] + v[d]) & 0xFFFFFFFF
                v[b] = ror( v[b] ^ v[c], 7)
                
        h = [h[i]^v[i]^v[i+8] for i in range(8)]
    return [(int(t)>>i)&255 for t in h for i in range(24,-1,-8) ]

print bl256([0]*200)
